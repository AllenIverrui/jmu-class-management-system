<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jumclassmanger.mapper.ClassesMapper">
  <resultMap id="BaseResultMap" type="com.example.jumclassmanger.bean.Classes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.jumclassmanger.bean.Classes">
    insert into classes (id, name, userid
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.jumclassmanger.bean.Classes">
    update classes
    set name = #{name,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, userid
    from classes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, userid
    from classes
  </select>
<!--  Classes searchClassesByName(String name);-->
  <select id="searchClassesByName" parameterType="string" resultMap="BaseResultMap">
    select   id, name, userid
    from classes where name =#{name,jdbcType=VARCHAR}
  </select>
</mapper>